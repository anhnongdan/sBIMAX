{% extends 'empty.twig' %}

{% set title=('HeatmapSessionRecording_ReplayX'|translate('HeatmapSessionRecording_SessionRecording'|translate)) %}

{% block content %}
    <html><head>
    <script type="text/javascript" src="libs/bower_components/jquery/dist/jquery.min.js"></script>
    <script type="text/javascript" src="plugins/HeatmapSessionRecording/libs/MutationObserver.js/MutationObserver.js"></script>
    <script type="text/javascript" src="plugins/HeatmapSessionRecording/libs/mutation-summary/src/mutation-summary.js"></script>
    <script type="text/javascript" src="plugins/HeatmapSessionRecording/libs/mutation-summary/util/tree-mirror.js"></script>
    <script type="text/javascript" src="plugins/HeatmapSessionRecording/libs/svg.js/dist/svg.min.js"></script>
    <script type="text/javascript" src="plugins/HeatmapSessionRecording/javascripts/recording.js"></script>
    <script type="text/javascript">
        window.recordingFrame = new HsrRecordingIframe({{ baseUrl|json_encode|raw }});
        if (!window.recordingFrame.isSupportedBrowser()) {
            var notSupportedMessage = {{ 'HeatmapSessionRecording_NotSupportedBrowser'|translate|json_encode|raw }};
            $('html').append('<body><div style="color:red; margin: 20px; font-size: 20px;font-weight:bold;">' + notSupportedMessage + '</div></body>');
        } else {
            window.recordingFrame.initialMutation(JSON.parse( {{ initialMutation|json_encode|raw }}));
        }
    </script>
    </head></html>

{% endblock %}
